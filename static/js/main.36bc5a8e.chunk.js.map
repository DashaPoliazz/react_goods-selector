{"version":3,"sources":["goods.js","App.tsx","index.tsx"],"names":["goodsFromServer","goods","map","product","name","id","uuidv4","App","state","selectedGoods","renderSelectedGoods","goodList","length","stringOfGoods","i","currentGood","penultimateGood","lastGood","handleClear","setState","handleRemove","goodToRemove","prevState","filter","item","handleSelect","goodToSelect","this","className","onClick","type","isSelected","includes","classNames","React","Component","ReactDOM","render","document","getElementById"],"mappings":"8PAeeA,G,MAbS,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,OCFIC,EAAmBD,EAAgBE,KAAI,SAACC,GAC5C,MAAO,CACLC,KAAMD,EACNE,GAAIC,kBAQKC,EAAb,4MACEC,MAAyB,CACvBC,cAAe,CAAC,QAFpB,EAKEC,oBAAsB,SAACC,GACrB,GAAwB,IAApBA,EAASC,OACX,MAAO,oBAKT,IAFA,IAAIC,EAAgB,GAEXC,EAAI,EAAGA,EAAIH,EAASC,OAAQE,GAAK,EAAG,CAC3C,IAAMC,EAAcJ,EAASG,GACvBE,EAAkBL,EAASA,EAASC,OAAS,GAC7CK,EAAWN,EAASA,EAASC,OAAS,GAM5C,GAJwB,IAApBD,EAASC,SACXC,GAAa,UAAOE,EAAP,iBAGXA,IAAgBC,EAAiB,CACnCH,GAAa,UAAOE,EAAP,gBAA0BE,EAA1B,iBACb,MAGEF,IAAgBE,IAClBJ,GAAa,UAAOE,EAAP,OAIjB,OAAOF,GA/BX,EAkCEK,YAAc,WACZ,EAAKC,SAAS,CAAEV,cAAe,MAnCnC,EAsCEW,aAAe,SAACC,GACd,EAAKF,UAAS,SAACG,GAAD,MAAgB,CAC5Bb,cAAea,EAAUb,cAAcc,QACrC,SAACC,GAAD,OAAUA,IAASH,UAzC3B,EA8CEI,aAAe,SAACC,GACd,EAAKP,UAAS,SAACG,GAAD,MAAgB,CAC5Bb,cAAc,GAAD,mBAAMa,EAAUb,eAAhB,CAA+BiB,SAhDlD,4CAoDE,WAAU,IAAD,OACCjB,EAAkBkB,KAAKnB,MAAvBC,cAER,OACE,sBAEEmB,UAAU,gEAFZ,SAIE,sBAAKA,UAAU,oBAAf,UACE,yBAAQA,UAAU,mCAAlB,UACE,oBAAIA,UAAU,6CAAd,SACGD,KAAKjB,oBAAoBD,KAEd,OAAbA,QAAa,IAAbA,KAAeG,OACd,wBACEiB,QAASF,KAAKT,YACdY,KAAK,SAELF,UAAU,2DAJZ,mBASA,MAIJ,oBAAIA,UAAU,6BAAd,SACG3B,EAAMC,KAAI,YAAmB,IAAhBE,EAAe,EAAfA,KAAMC,EAAS,EAATA,GACZ0B,EAAatB,EAAcuB,SAAS5B,GAE1C,OACE,qBAEEwB,UAAWK,IAAW,OAAQ,OAAQ,CACpC,eAAgBF,IAHpB,UAMG3B,EAEA2B,EACC,wBACED,KAAK,SAELF,UAAU,sEACVC,QAAS,kBAAM,EAAKT,aAAahB,IAJnC,oBASA,wBACE0B,KAAK,SAELF,UAAU,0EACVC,QAAS,kBAAM,EAAKJ,aAAarB,IAJnC,sBAjBGC,iBArFvB,GAAyB6B,IAAMC,WClB/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.36bc5a8e.chunk.js","sourcesContent":["// import { v4 as uuidv4 } from 'uuid';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport default goodsFromServer;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport './App.scss';\n\nimport { Product } from './Types/Product';\n\nimport goodsFromServer from './goods';\n\nconst goods: Product[] = goodsFromServer.map((product) => {\n  return {\n    name: product,\n    id: uuidv4(),\n  };\n});\n\ninterface State {\n  selectedGoods: string[];\n}\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    selectedGoods: ['Jam'],\n  };\n\n  renderSelectedGoods = (goodList: string[]): string => {\n    if (goodList.length === 0) {\n      return 'No goods selected';\n    }\n\n    let stringOfGoods = '';\n\n    for (let i = 0; i < goodList.length; i += 1) {\n      const currentGood = goodList[i];\n      const penultimateGood = goodList[goodList.length - 2];\n      const lastGood = goodList[goodList.length - 1];\n\n      if (goodList.length === 1) {\n        stringOfGoods += `${currentGood} is selected`;\n      }\n\n      if (currentGood === penultimateGood) {\n        stringOfGoods += `${currentGood} and ${lastGood} are selected`;\n        break;\n      }\n\n      if (currentGood !== lastGood) {\n        stringOfGoods += `${currentGood}, `;\n      }\n    }\n\n    return stringOfGoods;\n  };\n\n  handleClear = () => {\n    this.setState({ selectedGoods: [] });\n  };\n\n  handleRemove = (goodToRemove: string) => {\n    this.setState((prevState) => ({\n      selectedGoods: prevState.selectedGoods.filter(\n        (item) => item !== goodToRemove,\n      ),\n    }));\n  };\n\n  handleSelect = (goodToSelect: string) => {\n    this.setState((prevState) => ({\n      selectedGoods: [...prevState.selectedGoods, goodToSelect],\n    }));\n  };\n\n  render() {\n    const { selectedGoods } = this.state;\n\n    return (\n      <main\n        // eslint-disable-next-line max-len\n        className=\"App font-mono text-2xl text-white pt-10 h-screen bg-slate-900\"\n      >\n        <div className=\"container mx-auto\">\n          <header className=\"App__header mb-20 justify-evenly\">\n            <h1 className=\"App__title title is-5 font-extrabold mb-50\">\n              {this.renderSelectedGoods(selectedGoods)}\n            </h1>\n            {selectedGoods?.length ? (\n              <button\n                onClick={this.handleClear}\n                type=\"button\"\n                // eslint-disable-next-line max-len\n                className=\"App__clear border-2 rounded-2xl p-1 hover:text-amber-300\"\n              >\n                Clear\n              </button>\n            ) : (\n              ''\n            )}\n          </header>\n\n          <ul className=\"flex flex-col items-center\">\n            {goods.map(({ name, id }) => {\n              const isSelected = selectedGoods.includes(name);\n\n              return (\n                <li\n                  key={id}\n                  className={classNames('Good', 'mb-5', {\n                    'Good--active': isSelected,\n                  })}\n                >\n                  {name}\n\n                  {isSelected ? (\n                    <button\n                      type=\"button\"\n                      // eslint-disable-next-line max-len\n                      className=\"Good__remove button text-base p-1 border-2 rounded hover:text-black\"\n                      onClick={() => this.handleRemove(name)}\n                    >\n                      Remove\n                    </button>\n                  ) : (\n                    <button\n                      type=\"button\"\n                      // eslint-disable-next-line max-len\n                      className=\"Good__select button text-base p-1 border-2 rounded hover:text-amber-600\"\n                      onClick={() => this.handleSelect(name)}\n                    >\n                      Select\n                    </button>\n                  )}\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      </main>\n    );\n  }\n}\n\n// <ul className=\"flex flex-col items-center\">\n//             {goods.map(({ name, id }) => {\n//               const isSelected = selectedGoods.includes(name);\n\n//               return (\n//                 <li\n//                   key={id}\n//                   className={classNames('Good', 'mb-5', {\n//                     'Good--active': isSelected,\n//                   })}\n//                 >\n//                   {name}\n\n//                   {isSelected ? (\n//                     <button\n//                       onClick={() => this.handleRemove(name)}\n//                       type=\"button\"\n//                       // eslint-disable-next-line max-len\n//                       className=\"Good__remove button text-base p-1 border-2 rounded hover:text-black\"\n//                     >\n//                       Remove\n//                     </button>\n//                   ) : (\n//                     <button\n//                       onClick={() => this.handleSelect(name)}\n//                       type=\"button\"\n//                       // eslint-disable-next-line max-len\n//                       className=\"Good__select button text-base p-1 border-2 rounded hover:text-amber-600\"\n//                     >\n//                       Select\n//                     </button>\n//                   )}\n//                 </li>\n//               );\n//             })}\n//           </ul>\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}